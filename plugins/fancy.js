// fancy.js
module.exports = {
    name: "fancy",
    command: ["fancy", "fonts", "style"],
    description: "Convert text into 50 fancy fonts/styles",

    execute: async (sock, m, args) => {
        try {
            if (!args.length) {
                return sock.sendMessage(
                    m.key.remoteJid,
                    { text: "‚ú® Usage: .fancy <your text>\nExample: .fancy hello" },
                    { quoted: m }
                );
            }

            const text = args.join(" ");

            // 50 fancy styles
            const fancyMaps = [
                { name: "Bold", fn: t => t.replace(/[a-z]/gi, c => String.fromCodePoint(c.charCodeAt(0) + 0x1D3BF)) },
                { name: "Italic", fn: t => t.replace(/[a-z]/gi, c => String.fromCodePoint(c.charCodeAt(0) + 0x1D3ED)) },
                { name: "Bold Italic", fn: t => t.replace(/[a-z]/gi, c => String.fromCodePoint(c.charCodeAt(0) + 0x1D467)) },
                { name: "Monospace", fn: t => t.replace(/[a-z]/gi, c => String.fromCodePoint(c.charCodeAt(0) + 0x1D68F)) },
                { name: "Bubble", fn: t => t.replace(/[a-z]/gi, c => ({a:"‚ìê",b:"‚ìë",c:"‚ìí",d:"‚ìì",e:"‚ìî",f:"‚ìï",g:"‚ìñ",h:"‚ìó",i:"‚ìò",j:"‚ìô",k:"‚ìö",l:"‚ìõ",m:"‚ìú",n:"‚ìù",o:"‚ìû",p:"‚ìü",q:"‚ì†",r:"‚ì°",s:"‚ì¢",t:"‚ì£",u:"‚ì§",v:"‚ì•",w:"‚ì¶",x:"‚ìß",y:"‚ì®",z:"‚ì©"}[c.toLowerCase()]||c)) },
                { name: "Square", fn: t => t.replace(/[a-z]/gi, c => ({a:"üÑ∞",b:"üÑ±",c:"üÑ≤",d:"üÑ≥",e:"üÑ¥",f:"üÑµ",g:"üÑ∂",h:"üÑ∑",i:"üÑ∏",j:"üÑπ",k:"üÑ∫",l:"üÑª",m:"üÑº",n:"üÑΩ",o:"üÑæ",p:"üÑø",q:"üÖÄ",r:"üÖÅ",s:"üÖÇ",t:"üÖÉ",u:"üÖÑ",v:"üÖÖ",w:"üÖÜ",x:"üÖá",y:"üÖà",z:"üÖâ"}[c.toLowerCase()]||c)) },
                { name: "Tiny", fn: t => t.replace(/[a-z]/gi, c => ({a:"·¥Ä",b:" ô",c:"·¥Ñ",d:"·¥Ö",e:"·¥á",f:"“ì",g:"…¢",h:" ú",i:"…™",j:"·¥ä",k:"·¥ã",l:" ü",m:"·¥ç",n:"…¥",o:"·¥è",p:"·¥ò",q:"«´",r:" Ä",s:"s",t:"·¥õ",u:"·¥ú",v:"·¥†",w:"·¥°",x:"x",y:" è",z:"·¥¢"}[c.toLowerCase()]||c)) },
                { name: "Strike", fn: t => t.split("").map(c=>"Ã∂"+c).join("") },
                { name: "Underline", fn: t => t.split("").map(c=>c+"Ã≤").join("") },
                { name: "Double Underline", fn: t => t.split("").map(c=>c+"Ã≥").join("") },
                { name: "Mirror", fn: t => t.split("").reverse().join("") },
                { name: "Cursive", fn: t => t.replace(/[a-z]/gi, c => ({a:"ùì™",b:"ùì´",c:"ùì¨",d:"ùì≠",e:"ùìÆ",f:"ùìØ",g:"ùì∞",h:"ùì±",i:"ùì≤",j:"ùì≥",k:"ùì¥",l:"ùìµ",m:"ùì∂",n:"ùì∑",o:"ùì∏",p:"ùìπ",q:"ùì∫",r:"ùìª",s:"ùìº",t:"ùìΩ",u:"ùìæ",v:"ùìø",w:"ùîÄ",x:"ùîÅ",y:"ùîÇ",z:"ùîÉ"}[c.toLowerCase()]||c)) },
                { name: "Old English", fn: t => t.replace(/[a-z]/gi, c => ({a:"ùîû",b:"ùîü",c:"ùî†",d:"ùî°",e:"ùî¢",f:"ùî£",g:"ùî§",h:"ùî•",i:"ùî¶",j:"ùîß",k:"ùî®",l:"ùî©",m:"ùî™",n:"ùî´",o:"ùî¨",p:"ùî≠",q:"ùîÆ",r:"ùîØ",s:"ùî∞",t:"ùî±",u:"ùî≤",v:"ùî≥",w:"ùî¥",x:"ùîµ",y:"ùî∂",z:"ùî∑"}[c.toLowerCase()]||c)) },
                { name: "Wide", fn: t => t.split("").join(" ") },
                { name: "Hearts", fn: t => "üíñ "+t.split("").join(" üíñ ")+" üíñ" },
                { name: "Stars", fn: t => "‚≠ê "+t.split("").join(" ‚≠ê ")+" ‚≠ê" },
                { name: "Fire", fn: t => "üî• "+t.split("").join(" üî• ")+" üî•" },
                { name: "Arrows", fn: t => "‚û°Ô∏è "+t.split("").join(" ‚û°Ô∏è ")+" ‚û°Ô∏è" },
                { name: "Clouds", fn: t => "‚òÅÔ∏è "+t.split("").join(" ‚òÅÔ∏è ")+" ‚òÅÔ∏è" },
                { name: "Waves", fn: t => "üåä "+t.split("").join(" üåä ")+" üåä" },
                { name: "Music", fn: t => "üéµ "+t.split("").join(" üéµ ")+" üéµ" },
                { name: "Diamond", fn: t => "üíé "+t.split("").join(" üíé ")+" üíé" },
                { name: "Ghost", fn: t => "üëª "+t.split("").join(" üëª ")+" üëª" },
                { name: "Crown", fn: t => "üëë "+t.split("").join(" üëë ")+" üëë" },
                { name: "Alien", fn: t => "üëΩ "+t.split("").join(" üëΩ ")+" üëΩ" },
                { name: "Flower", fn: t => "üå∫ "+t.split("").join(" üå∫ ")+" üå∫" },
                { name: "Sun", fn: t => "üåû "+t.split("").join(" üåû ")+" üåû" },
                { name: "Moon", fn: t => "üåô "+t.split("").join(" üåô ")+" üåô" },
                { name: "Stars2", fn: t => "üåü "+t.split("").join(" üåü ")+" üåü" },
                { name: "Money", fn: t => "üí∏ "+t.split("").join(" üí∏ ")+" üí∏" },
                { name: "Cool", fn: t => "üòé "+t.split("").join(" üòé ")+" üòé" },
                { name: "Fireworks", fn: t => "üéÜ "+t.split("").join(" üéÜ ")+" üéÜ" },
                { name: "Rain", fn: t => "üåßÔ∏è "+t.split("").join(" üåßÔ∏è ")+" üåßÔ∏è" },
                { name: "Lightning", fn: t => "‚ö° "+t.split("").join(" ‚ö° ")+" ‚ö°" },
                { name: "Candy", fn: t => "üç≠ "+t.split("").join(" üç≠ ")+" üç≠" },
                { name: "Balloon", fn: t => "üéà "+t.split("").join(" üéà ")+" üéà" },
                { name: "Party", fn: t => "ü•≥ "+t.split("").join(" ü•≥ ")+" ü•≥" },
                { name: "Robot", fn: t => "ü§ñ "+t.split("").join(" ü§ñ ")+" ü§ñ" },
                { name: "Skull", fn: t => "üíÄ "+t.split("").join(" üíÄ ")+" üíÄ" },
                { name: "Dragon", fn: t => "üêâ "+t.split("").join(" üêâ ")+" üêâ" },
                { name: "Sword", fn: t => "‚öîÔ∏è "+t.split("").join(" ‚öîÔ∏è ")+" ‚öîÔ∏è" },
                { name: "Shield", fn: t => "üõ°Ô∏è "+t.split("").join(" üõ°Ô∏è ")+" üõ°Ô∏è" }
            ];

            let output = `‚ú® *Fancy Fonts (50 Styles)* ‚ú®\nInput: ${text}\n\n`;
            fancyMaps.forEach((style, i) => {
                output += `${i+1}. *${style.name}* : ${style.fn(text)}\n\n`;
            });

            await sock.sendMessage(m.key.remoteJid, { text: output }, { quoted: m });

        } catch (err) {
            console.error("Fancy Error:", err);
            await sock.sendMessage(m.key.remoteJid, { text: "‚ö†Ô∏è Error generating fancy fonts." }, { quoted: m });
        }
    }
};
