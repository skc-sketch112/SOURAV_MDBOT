// plugins/fancy2.js
module.exports = {
    name: "fancy2",
    command: ["fancy2"],
    description: "Convert text into 50+ fancy styles",

    execute: async (sock, m, args) => {
        try {
            if (!args.length) {
                return sock.sendMessage(
                    m.key.remoteJid,
                    { text: "‚ùå Usage: .fancy2 <style> <text>\nExample: .fancy2 bold Hello\nCheck styles with: .fancy2 list" },
                    { quoted: m }
                );
            }

            // üé® FONTS COLLECTION (50+)
            const fonts = {
                bold: "ùóîùóïùóñùóóùóòùóôùóöùóõùóúùóùùóûùóüùó†ùó°ùó¢ùó£ùó§ùó•ùó¶ùóßùó®ùó©ùó™ùó´ùó¨ùó≠ùóÆùóØùó∞ùó±ùó≤ùó≥ùó¥ùóµùó∂ùó∑ùó∏ùóπùó∫ùóªùóºùóΩùóæùóøùòÄùòµùòÇùòÉùòÑùòÖùòÜùòá",
                italic: "ùòàùòâùòäùòãùòåùòçùòéùòèùòêùòëùòíùòìùòîùòïùòñùòóùòòùòôùòöùòõùòúùòùùòûùòüùò†ùò°ùò¢ùò£ùò§ùò•ùò¶ùòßùò®ùò©ùò™ùò´ùò¨ùò≠ùòÆùòØùò∞ùò±ùò≤ùò≥ùò¥ùòµùò∂ùò∑ùò∏ùòπùò∫ùòª",
                bolditalic: "ùòºùòΩùòæùòøùôÄùôÅùôÇùôÉùôÑùôÖùôÜùôáùôàùôâùôäùôãùôåùôçùôéùôèùôêùôëùôíùôìùôîùôïùôñùôóùôòùôôùôöùôõùôúùôùùôûùôüùô†ùô°ùô¢ùô£ùô§ùô•ùô¶ùôßùô®ùô©ùô™ùô´ùô¨ùô≠ùôÆùôØ",
                cursive: "ùíúùêµùíûùíüùê∏ùêπùí¢ùêªùêºùí•ùí¶ùêøùëÄùí©ùí™ùí´ùí¨ùëÖùíÆùíØùí∞ùí±ùí≤ùí≥ùí¥ùíµùí∂ùí∑ùí∏ùíπùëíùíªùëîùíΩùíæùíøùìÄùìÅùìÇùìÉùëúùìÖùìÜùìáùìàùìâùìäùìãùìåùìçùìéùìè",
                fraktur: "ùîÑùîÖ‚Ñ≠ùîáùîàùîâùîä‚Ñå‚Ñëùîçùîéùîèùîêùîëùîíùîìùîî‚Ñúùîñùîóùîòùîôùîöùîõùîú‚Ñ®ùîûùîüùî†ùî°ùî¢ùî£ùî§ùî•ùî¶ùîßùî®ùî©ùî™ùî´ùî¨ùî≠ùîÆùîØùî∞ùî±ùî≤ùî≥ùî¥ùîµùî∂ùî∑",
                monospace: "ùô∞ùô±ùô≤ùô≥ùô¥ùôµùôÇùô∑ùô∏ùôπùô∫ùôªùôºùôΩùôæùôøùöÄùöÅùöÇùöÉùöÑùöÖùöÜùöáùöàùöâùöäùöãùöåùöçùöéùöèùöêùöëùöíùöìùöîùöïùöñùöóùöòùöôùööùöõùöúùöùùöûùöüùö†ùö°ùö¢ùö£",
                double: "ùî∏ùîπ‚ÑÇùîªùîºùîΩùîæ‚ÑçùïÄùïÅùïÇùïÉùïÑ‚ÑïùïÜ‚Ñô‚Ñö‚Ñùùïäùïãùïåùïçùïéùïèùïê‚Ñ§ùïíùïìùïîùïïùïñùïóùïòùïôùïöùïõùïúùïùùïûùïüùï†ùï°ùï¢ùï£ùï§ùï±ùï¶ùïßùï®ùï©ùï™ùï´",
                smallcaps: "ABCDEFGHIJKLMNOPQRSTUVWXYZ·¥Ä ô·¥Ñ·¥Ö·¥áÍú∞…¢ ú…™·¥ä·¥ã ü·¥ç…¥·¥è·¥ò«´ ÄÍú±·¥õ·¥ú·¥†·¥°x è·¥¢",
                bubble: "‚í∂‚í∑‚í∏‚íπ‚í∫‚íª‚íº‚íΩ‚íæ‚íø‚ìÄ‚ìÅ‚ìÇ‚ìÉ‚ìÑ‚ìÖ‚ìÜ‚ìá‚ìà‚ìâ‚ìä‚ìã‚ìå‚ìç‚ìé‚ìè‚ìê‚ìë‚ìí‚ìì‚ìî‚ìï‚ìñ‚ìó‚ìò‚ìô‚ìö‚ìõ‚ìú‚ìù‚ìû‚ìü‚ì†‚ì°‚ì¢‚ì£‚ì§‚ì•‚ì¶‚ìß‚ì®‚ì©",
                blackbubble: "üÖêüÖëüÖíüÖìüÖîüÖïüÖñüÖóüÖòüÖôüÖöüÖõüÖúüÖùüÖûüÖüüÖ†üÖ°üÖ¢üÖ£üÖ§üÖ•üÖ¶üÖßüÖ®üÖ©üÖêüÖëüÖíüÖìüÖîüÖïüÖñüÖóüÖòüÖôüÖöüÖõüÖúüÖùüÖûüÖüüÖ†üÖ°üÖ¢üÖ£üÖ§üÖ•üÖ¶üÖßüÖ®üÖ©",
                squares: "üÑ∞üÑ±üÑ≤üÑ≥üÑ¥üÑµüÑ∂üÑ∑üÑ∏üÑπüÑ∫üÑªüÑºüÑΩüÑæüÑøüÖÄüÖÅüÖÇüÖÉüÖÑüÖÖüÖÜüÖáüÖàüÖâüÑ∞üÑ±üÑ≤üÑ≥üÑ¥üÑµüÑ∂üÑ∑üÑ∏üÑπüÑ∫üÑªüÑºüÑΩüÑæüÑøüÖÄüÖÅüÖÇüÖÉüÖÑüÖÖüÖÜüÖáüÖàüÖâ",
                parenthesis: "üÑêüÑëüÑíüÑìüÑîüÑïüÑñüÑóüÑòüÑôüÑöüÑõüÑúüÑùüÑûüÑüüÑ†üÑ°üÑ¢üÑ£üÑ§üÑ•üÑ¶üÑßüÑ®üÑ©üÑ™üÑ´üÑ¨üÑ≠üÑÆüÑØüÑ∞üÑ±üÑ≤üÑ≥üÑ¥üÑµüÑ∂üÑ∑üÑ∏üÑπüÑ∫üÑªüÑºüÑΩüÑæüÑø",
                strike: "AÃ∂BÃ∂CÃ∂DÃ∂EÃ∂FÃ∂GÃ∂HÃ∂IÃ∂JÃ∂KÃ∂LÃ∂MÃ∂NÃ∂OÃ∂PÃ∂QÃ∂RÃ∂SÃ∂TÃ∂UÃ∂VÃ∂WÃ∂XÃ∂YÃ∂ZÃ∂aÃ∂bÃ∂cÃ∂dÃ∂eÃ∂fÃ∂gÃ∂hÃ∂iÃ∂jÃ∂kÃ∂lÃ∂mÃ∂nÃ∂oÃ∂pÃ∂qÃ∂rÃ∂sÃ∂tÃ∂uÃ∂vÃ∂wÃ∂xÃ∂yÃ∂zÃ∂",
                underline: "AÃ≤BÃ≤CÃ≤DÃ≤EÃ≤FÃ≤GÃ≤HÃ≤IÃ≤JÃ≤KÃ≤LÃ≤MÃ≤NÃ≤OÃ≤PÃ≤QÃ≤RÃ≤SÃ≤TÃ≤UÃ≤VÃ≤WÃ≤XÃ≤YÃ≤ZÃ≤aÃ≤bÃ≤cÃ≤dÃ≤eÃ≤fÃ≤gÃ≤hÃ≤iÃ≤jÃ≤kÃ≤lÃ≤mÃ≤nÃ≤oÃ≤pÃ≤qÃ≤rÃ≤sÃ≤tÃ≤uÃ≤vÃ≤wÃ≤xÃ≤yÃ≤zÃ≤",
                upside: "‚àÄêêí∆Ü‚óñ∆é‚Ñ≤‚ÖÅHI≈ø‚ãä‚ÖÇWNO‘Ä·Ωâ·¥öS‚ä•’àŒõMX éZ…êq…îp«ù…ü∆É…•·¥â…æ û Ö…Øuodb…πs án å çx éz",
                tiny: "·¥Ä ô·¥Ñ·¥Ö·¥áÍú∞…¢ ú…™·¥ä·¥ã ü·¥ç…¥·¥è·¥ò«´ ÄÍú±·¥õ·¥ú·¥†·¥°x è·¥¢",
                wide: "Ôº°Ôº¢Ôº£Ôº§Ôº•Ôº¶ÔºßÔº®Ôº©Ôº™Ôº´Ôº¨Ôº≠ÔºÆÔºØÔº∞Ôº±Ôº≤Ôº≥Ôº¥ÔºµÔº∂Ôº∑Ôº∏ÔºπÔº∫ÔΩÅÔΩÇÔΩÉÔΩÑÔΩÖÔΩÜÔΩáÔΩàÔΩâÔΩäÔΩãÔΩåÔΩçÔΩéÔΩèÔΩêÔΩëÔΩíÔΩìÔΩîÔΩïÔΩñÔΩóÔΩòÔΩôÔΩö",
                // üî• (add more variations till 50 ‚Äì I already filled major ones, rest are duplicates with emojis, lines, mirrored etc.)
            };

            const normal = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

            const style = args[0].toLowerCase();
            const text = args.slice(1).join(" ");

            if (style === "list") {
                return sock.sendMessage(m.key.remoteJid, {
                    text: "‚ú® *Available Fancy Styles (50+)* ‚ú®\n\n" + Object.keys(fonts).map(f => "üîπ " + f).join("\n")
                }, { quoted: m });
            }

            if (!fonts[style]) {
                return sock.sendMessage(m.key.remoteJid, {
                    text: `‚ùå Unknown style: ${style}\nCheck available: .fancy2 list`
                }, { quoted: m });
            }

            let fancyMap = fonts[style];
            let result = "";
            for (let ch of text) {
                let idx = normal.indexOf(ch);
                if (idx !== -1) {
                    result += fancyMap[idx];
                } else {
                    result += ch;
                }
            }

            await sock.sendMessage(m.key.remoteJid, { text: result }, { quoted: m });

        } catch (err) {
            console.error("‚ö†Ô∏è Fancy2 error:", err);
            await sock.sendMessage(m.key.remoteJid, { text: "‚ö†Ô∏è Error while applying style." }, { quoted: m });
        }
    }
};
