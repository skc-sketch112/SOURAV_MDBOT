// asciimoji-art.js
const asciiEmojis = [
  // 200+ manually coded emoji faces
  "⊂(◉‿◉)つ","ㆆ _ ㆆ","⤜(ⱺ ʖ̯ⱺ)⤏","(¬‿¬)","(•‿•)","(ᵔᴥᵔ)","(ಥ﹏ಥ)","(◕‿◕✿)",
  "(▀̿Ĺ̯▀̿ ̿)","(ง ͠° ͟ل͜ ͡°)ง","(☞ﾟヮﾟ)☞","ᕙ(⇀‸↼‶)ᕗ","٩(˘◡˘)۶","(✿◠‿◠)","༼ つ ◕_◕ ༽つ",
  "(☞ﾟ∀ﾟ)☞","ლ(ಠ_ಠ ლ)","(ಥ_ಥ)","(¬_¬)","(≧◡≦)","(ʘ‿ʘ)","(⌐■_■)","(ノಠ益ಠ)ノ彡┻━┻",
  "( •_•)>⌐■-■","(⌐■_■)–︻╦╤─","ʕ•ᴥ•ʔ","ʕ￫ᴥ￩ʔ","ʕっ•ᴥ•ʔっ","(ᵔᴥᵔ)","(❍ᴥ❍ʋ)","°◡°",
  "(☞ﾟ∀ﾟ)☞ ☜(ﾟ∀ﾟ☜)","ヽ༼ຈل͜ຈ༽ﾉ","(•_•) ( •_•)>⌐■-■ (⌐■_■)","٩◔̯◔۶","ಠ_ಠ","(¬‿¬)",
  "( ͡° ͜ʖ ͡°)","(╯°□°）╯︵ ┻━┻","(｡◕‿‿◕｡)","(>_<)","(¬‿¬)","(~_^)","(✧ω✧)","ヽ(•‿•)ノ",
  "(*≧ω≦)","(*^‿^*)","(￣▽￣)","(╥﹏╥)","(・_・ヾ","(✿◡‿◡)","(⌒‿⌒)","(•̀o•́)ง","(•‿•)",
  "٩(•̤̀ᵕ•̤́๑)ᵒᵏᵎᵎᵎ","(¬‿¬)","(｡♥‿♥｡)","(╬ಠ益ಠ)","ᕦ(ò_óˇ)ᕤ","(¬‿¬)","(☞ﾟ∀ﾟ)☞",
  "(◔̯◔)","(⊙_⊙)","(☉_☉)","(*_*)","(>ω<)","(⌒‿⌒✿)","(✿◠‿◠)","(╯︵╰,)","(￣︿￣)","(¬‿¬)ﾉ",
  "(ง •̀_•́)ง","(ノ^_^)ノ","ヽ(´▽｀)ノ","(=^･ω･^=)","(＾ｖ＾)","(≧ω≦)","(＾▽＾)","(⌒▽⌒)☆",
  "(￣▽￣)ノ","(・∀・)","(¬‿¬)✧","(≖‿≖)","(⌒_⌒;)","(・_・;)","(；一_一)","(°ロ°)☝","(ﾉ◕ヮ◕)ﾉ*:･ﾟ✧",
  "(¬‿¬)ノ","(•‿•)ノ","(✿◕‿◕)","(¬_¬)b","(>‿◠)✌","(•‿•)✌","(◕‿◕)✌","(╯°□°）╯︵ ┻━┻",
  "(•_•) ( •_•)>⌐■-■","ಠ‿ಠ","(¬‿¬)つ","(•_•)つ","(^_−)☆","(≧◡≦) ♡","(⌒‿⌒)♡","(♥‿♥)",
  "(✿♥‿♥)","(•‿•)♥","(=^･ｪ･^=)","ლ(╹◡╹ლ)","ヽ(°◇° )ノ","(╯°□°）╯︵ ┻━┻","(ﾉಥ益ಥ）ﾉ",
  "┬─┬ノ( º _ ºノ)","(ノಠ_ಠ)ノ","(⌐■_■)–︻╦╤─","ಥ_ಥ","(✧◡✧)","(=^･ω･^=)","┬──┬ ¯\\_(ツ)_/¯",
  "(◕‿◕)","(¬_¬)","(ಠ_ಠ)","(¬‿¬)","(•‿•)","(•ᴗ•)","(¬‿¬)","ヽ(･∀･)ﾉ","(￣ω￣)","(•ω•)",
  "(⊙_⊙;)","(°▽°)","(◕‿◕)","(⌐■_■)","(✧ω✧)","(ᵔᴥᵔ)","(>_<)","(╯°□°)╯","╰(°▽°)╯",
  "(¬‿¬)","༼ つ ◕_◕ ༽つ","(⊙_☉)","(✿◠‿◠)","(*≧▽≦)","(⌒‿⌒)","(｡♥‿♥｡)","(♥‿♥)",
  "(づ｡◕‿‿◕｡)づ","ᕦ(ò_óˇ)ᕤ","ʕ•ᴥ•ʔ","ʕ￫ᴥ￩ʔ","ʕっ•ᴥ•ʔっ","(◕‿◕✿)","(╯°□°）╯︵ ┻━┻",
  "(¬‿¬)ﾉ","(•‿•)ノ","(✿◕‿◕)","(¬_¬)b","(>‿◠)✌","(•‿•)✌","(◕‿◕)✌","(╯°□°）╯︵ ┻━┻",
  "(•_•) ( •_•)>⌐■-■","ಠ‿ಠ","(¬‿¬)つ","(•_•)つ","(^_−)☆","(≧◡≦) ♡","(⌒‿⌒)♡","(♥‿♥)",
  "(✿♥‿♥)"
];

const asciiArtTexts = {
  happy: `
(｡◕‿‿◕｡) Happy!
(⌒‿⌒✿)
(•‿•)
`,
  sad: `
(╥﹏╥) Sad...
(ಥ_ಥ)
(；一_一)
`,
  love: `
(♥‿♥)
(｡♥‿♥｡)
(✿♥‿♥)
`,
  angry: `
(╬ಠ益ಠ)
(ノಠ_ಠ)ノ
(ง •̀_•́)ง
`,
  surprise: `
(⊙_☉)
(⊙_⊙;)
(°ロ°)☝
`,
  cool: `
(⌐■_■)
( •_•)>⌐■-■
(⌐■_■)–︻╦╤─
`,
  wink: `
(^_−)☆
(¬‿¬)✧
(>‿◠)✌
`,
  love2: `
(♥‿♥)
(づ｡◕‿‿◕｡)づ
(｡♥‿♥｡)
`,
  excited: `
٩(˘◡˘)۶
(*≧ω≦)
ヽ(･∀･)ﾉ
`,
  tired: `
(￣ω￣)
(；一_一)
(╯︵╰,)
`,
  sleepy: `
(-_-) zzz
(˘︹˘)
(¬_¬) zz
`,
  laughing: `
(≧◡≦)
(*^‿^*)
(⌒▽⌒)☆
`,
  crying: `
(╥﹏╥)
(ಥ_ಥ)
(｡•́︿•̀｡)
`,
  kissing: `
(づ￣ ³￣)づ
(*^3^)/~☆
(✿^3^)/
`,
  thinking: `
(¬_¬)
(⊙_☉)
(•_•)? 
`,
  confused: `
(⊙_☉)
(°ロ°)☝
(・_・ヾ)
`,
  // Add more keywords up to 50+ here...
};

module.exports = {
  name: "asciiart",
  alias: ["ae", "emojiart"],
  desc: "Send ASCII emoji art or text-based ASCII emoji art",
  category: "fun",
  usage: ".asciiart [text or number]",
  execute: async (sock, m, args) => {
    try {
      let art;
      if (args.length > 0) {
        const input = args[0].toLowerCase();
        if (asciiArtTexts[input]) {
          art = asciiArtTexts[input];
        } else {
          let index = parseInt(args[0]) - 1;
          if (!isNaN(index) && index >= 0 && index < asciiEmojis.length) {
            art = asciiEmojis[index];
          } else {
            art = `❌ No ASCII art found for "${args[0]}"`;
          }
        }
      } else {
        const randomIndex = Math.floor(Math.random() * asciiEmojis.length);
        art = asciiEmojis[randomIndex];
      }

      await sock.sendMessage(
        m.key.remoteJid,
        { text: "```\n" + art + "\n```" },
        { quoted: m }
      );

    } catch (err) {
      console.error("❌ Error in asciiart:", err);
      await sock.sendMessage(
        m.key.remoteJid,
        { text: "⚠️ Failed to send ASCII emoji art." },
        { quoted: m }
      );
    }
  }
};
